name: Sync Fork with Upstream

on:
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight UTC
  workflow_dispatch:     # Allow manual triggering

jobs:
  sync:
    runs-on: blacksmith-4vcpu-ubuntu-2404
    permissions:
      contents: write
      actions: write
      
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
      - name: Add upstream remote
        run: |
          git remote add upstream https://github.com/amantus-ai/vibetunnel.git || true
          git remote set-url upstream https://github.com/amantus-ai/vibetunnel.git
          
      - name: Fetch upstream
        run: git fetch upstream
        
      - name: Check if sync needed
        id: check
        run: |
          git checkout main
          BEHIND=$(git rev-list --count HEAD..upstream/main)
          echo "commits_behind=$BEHIND" >> $GITHUB_OUTPUT
          if [ "$BEHIND" -gt 0 ]; then
            echo "sync_needed=true" >> $GITHUB_OUTPUT
          else
            echo "sync_needed=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Sync with upstream
        if: steps.check.outputs.sync_needed == 'true'
        run: |
          # Create a temporary branch for the merge
          git checkout -b temp-sync
          git merge upstream/main --no-edit
          
          # Reset any workflow file changes for security
          if git diff --name-only HEAD~1 HEAD | grep -q ".github/workflows/"; then
            echo "ðŸ”’ Excluding workflow file changes for security"
            git checkout HEAD~1 -- .github/workflows/
            git add .github/workflows/
            git commit --amend --no-edit 2>/dev/null || true
          fi
          
          # Switch back to main and merge the safe changes
          git checkout main
          git merge temp-sync --no-edit
          git branch -d temp-sync
          git push origin main
          
      - name: Report sync status
        run: |
          if [ "${{ steps.check.outputs.sync_needed }}" == "true" ]; then
            echo "âœ… Fork synced successfully - ${{ steps.check.outputs.commits_behind }} commits merged"
          else
            echo "âœ… Fork is already up to date"
          fi